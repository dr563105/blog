<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://dr563105.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dr563105.github.io/blog/" rel="alternate" type="text/html" /><updated>2021-09-17T16:05:23-05:00</updated><id>https://dr563105.github.io/blog/feed.xml</id><title type="html">Deepak Ramani</title><subtitle>A Data Science Blog</subtitle><entry><title type="html">Setting up Kaggle on Linux/Mac</title><link href="https://dr563105.github.io/blog/kaggle/2021/09/18/kaggle-setup.html" rel="alternate" type="text/html" title="Setting up Kaggle on Linux/Mac" /><published>2021-09-18T00:00:00-05:00</published><updated>2021-09-18T00:00:00-05:00</updated><id>https://dr563105.github.io/blog/kaggle/2021/09/18/kaggle-setup</id><author><name></name></author><category term="kaggle" /><summary type="html">Most of latest data science innovations happen at Kaggle. Kaggle hosts, in addtion to competitions, a large collection of datasets from various fields. The easiest way to interact with Kaggle is through its public API via command-line tool(CLI). Setting it up outside of Kaggle kernels is one of first tasks. In this post, I will guide you through that process.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dr563105.github.io/blog/images/kaggle-logo.png" /><media:content medium="image" url="https://dr563105.github.io/blog/images/kaggle-logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Setting up AWS EC2 instance for ML</title><link href="https://dr563105.github.io/blog/aws/ubuntu/conda/fastai/pytorch/practical%20deep%20learning%20for%20coders/2021/09/17/aws-setup.html" rel="alternate" type="text/html" title="Setting up AWS EC2 instance for ML" /><published>2021-09-17T00:00:00-05:00</published><updated>2021-09-17T00:00:00-05:00</updated><id>https://dr563105.github.io/blog/aws/ubuntu/conda/fastai/pytorch/practical%20deep%20learning%20for%20coders/2021/09/17/aws-setup</id><author><name></name></author><category term="aws" /><category term="ubuntu" /><category term="conda" /><category term="fastai" /><category term="pytorch" /><category term="Practical Deep Learning for Coders" /><summary type="html">Amazon Web Services(AWS) offer great many services to suit user needs. For ML/DL all one needs is a computer with access to a Graphical Processing Unit(GPU). Since AWS offers a virtual PC with GPU at a reasonable price, we will use their service. This blog post will use an AWS EC2 instance to make it ready for running ML tasks.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dr563105.github.io/blog/images/aws-logo.png" /><media:content medium="image" url="https://dr563105.github.io/blog/images/aws-logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>